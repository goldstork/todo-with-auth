{"version":3,"sources":["setAuthToken.js","store/actions/todos.js","store/actions/types.js","store/actions/authentication.js","store/reducers/errors.js","store/reducers/auth.js","store/reducers/todos.js","store/reducers/index.js","helpers/isEmpty.js","store/index.js","components/NavBar.js","components/Register.js","components/Login.js","components/Card.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","updateTodosInState","todos","type","payload","setCurrentUser","decoded","logoutUser","history","dispatch","localStorage","removeItem","push","initialState","isAuth","user","combineReducers","errors","state","arguments","length","undefined","action","auth","value","Object","objectSpread","keys","trim","middleware","applyMiddleware","thunk","logger","concat","toConsumableArray","window","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","rootReducer","compose","apply","NavBar","onLogout","e","preventDefault","_this$props","_this","props","_this$props$auth","this","authLinks","react_default","a","createElement","className","onClick","src","avatar","alt","name","title","style","width","marginRight","guestLinks","Link","to","id","Component","connect","withRouter","Register","email","password","password_confirm","handleInputChange","setState","defineProperty","target","handleSubmit","registerUser","nextProps","marginTop","marginBottom","onSubmit","placeholder","classnames","is-invalid","onChange","post","then","res","catch","err","response","data","Login","loginUser","setItem","jwtDecoded","Card","description","done","editing","checked","saveTodo","_this$state","editTodo","editMode","_this$state2","classNames","bg-dark","bg-success","rows","htmlFor","readMode","_this$props2","removeTodo","PureComponent","Home","postRequest","userID","todo","onRemoveTodo","todoID","onRemoveAllTodo","_this$props3","onEditTodo","_this$props4","getTodos","_this2","_this$props5","map","components_Card","assign","key","Redirect","get","url","jwtToken","jwtDecode","currentTime","Date","exp","location","href","App","es","BrowserRouter","components_NavBar","Route","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.12d001b6.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst setAuthToken = token => {\r\n\tif (token) {\r\n\t\taxios.defaults.headers.common['Authorization'] = token\r\n\t} else {\r\n\t\tdelete axios.defaults.headers.common['Authorization']\r\n\t}\r\n}\r\n\r\nexport default setAuthToken\r\n","import axios from 'axios'\r\nimport {\r\n\tGET_ERRORS,\r\n\tGET_TODOS\r\n} from './types'\r\n\r\nexport const getTodos = () => dispatch => {\r\n\taxios\r\n\t\t.get('/api/todos/get')\r\n\t\t.then(res => dispatch(updateTodosInState(res.data)))\r\n\t\t.catch(err => \r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_ERRORS,\r\n\t\t\t\tpayload: err,\r\n\t\t\t})\r\n\t\t)\r\n}\r\n\r\nexport const postRequest = (url, data) => dispatch => {\r\n\taxios\r\n\t\t.post(`/api/todos/${url}`, data)\r\n\t\t.then(res => dispatch(updateTodosInState(res.data)))\r\n\t\t.catch(err => \r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_ERRORS,\r\n\t\t\t\tpayload: err,\r\n\t\t\t})\r\n\t\t)\r\n}\r\n\r\nexport const updateTodosInState = todos => ({\r\n\ttype: GET_TODOS,\r\n\tpayload: todos\r\n})","// loading\r\nexport const LOADING = 'LOADING'\r\n\r\n// auth\r\nexport const GET_ERRORS = 'GET_ERRORS'\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER'\r\n\r\n// todos\r\nexport const GET_TODOS = 'GET_TODOS'","import axios from 'axios'\r\nimport { GET_ERRORS, SET_CURRENT_USER } from './types'\r\nimport setAuthToken from '../../setAuthToken'\r\nimport jwtDecoded from 'jwt-decode'\r\nimport { updateTodosInState } from './todos'\r\n\r\nexport const registerUser = (user, history) => dispatch => {\r\n\taxios\r\n\t\t.post('/api/users/register', user)\r\n\t\t.then(res => history.push('/login'))\r\n\t\t.catch(err =>\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_ERRORS,\r\n\t\t\t\tpayload: err.response.data,\r\n\t\t\t})\r\n\t\t)\r\n}\r\n\r\nexport const loginUser = user => dispatch => {\r\n\taxios\r\n\t\t.post('/api/users/login', user)\r\n\t\t.then(res => {\r\n\t\t\tconst { token } = res.data\r\n\t\t\tlocalStorage.setItem('jwtToken', token)\r\n\t\t\tsetAuthToken(token)\r\n\t\t\tconst decoded = jwtDecoded(token)\r\n\t\t\tdispatch(setCurrentUser(decoded))\r\n\t\t})\r\n\t\t.catch(err =>\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: GET_ERRORS,\r\n\t\t\t\tpayload: err,\r\n\t\t\t})\r\n\t\t)\r\n}\r\n\r\nexport const setCurrentUser = decoded => ({\r\n\ttype: SET_CURRENT_USER,\r\n\tpayload: decoded\r\n})\r\n\r\nexport const logoutUser = history => dispatch => {\r\n\tlocalStorage.removeItem('jwtToken')\r\n\tsetAuthToken(false)\r\n\tdispatch(updateTodosInState([]))\r\n\tdispatch(setCurrentUser({}))\r\n\thistory.push('/login')\r\n}","import { GET_ERRORS } from '../actions/types'\r\n\r\nconst initialState = {}\r\n\r\nexport default function(state = initialState, action) {\r\n\tswitch (action.type) {\r\n\t\tcase GET_ERRORS:\r\n\t\t\treturn action.payload\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n","import { SET_CURRENT_USER } from '../actions/types'\r\nimport isEmpty from '../../helpers/isEmpty'\r\n\r\nconst initialState = {\r\n\tisAuth: false,\r\n\tuser: {}\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_CURRENT_USER:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisAuth: !isEmpty(action.payload),\r\n\t\t\t\tuser: action.payload\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import { GET_TODOS } from '../actions/types'\r\n\r\nconst initialState = {\r\n\ttodos: []\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase GET_TODOS:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttodos: action.payload,\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}","import { combineReducers } from 'redux'\r\n\r\nimport errors from './errors'\r\nimport auth from './auth'\r\nimport todos from './todos'\r\n\r\nexport default combineReducers({\r\n\terrors,\r\n\tauth,\r\n\ttodos\r\n})\r\n","export default value => {\r\n    return (\r\n        value === undefined ||\r\n        value === null ||\r\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n        (typeof value === 'string' && value.trim().length === 0)\r\n    );\r\n}","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\nimport rootReducer from './reducers'\r\n\r\nconst inititalState = {}\r\n\r\nconst middleware = [\r\n    applyMiddleware(thunk, logger),\r\n    ...(window.__REDUX_DEVTOOLS_EXTENSION__ ? [window.__REDUX_DEVTOOLS_EXTENSION__()] : [])\r\n  ]\r\n\r\nconst store = createStore(\r\n    rootReducer, \r\n    inititalState, \r\n    compose(...middleware)\r\n)\r\n\r\nexport default store","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { logoutUser } from '../store/actions/authentication'\r\n\r\nclass NavBar extends Component {\r\n\tonLogout = e => {\r\n\t\te.preventDefault()\r\n\t\tconst { logoutUser, history } = this.props\r\n\t\tlogoutUser(history)\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {isAuth, user} = this.props.auth\r\n\t\tconst authLinks = (\r\n\t\t\t<ul className=\"navbar-nav ml-auto\">\r\n\t\t\t\t<div className=\"nav-link\" onClick={ this.onLogout }>\r\n\t\t\t\t\t<img src={user.avatar} alt={user.name} title={user.name}\r\n\t\t\t\t\t\tclassName=\"rounded-circle\"\r\n\t\t\t\t\t\tstyle={{ width: '25px', marginRight: '5px'}} />\r\n\t\t\t\t\t<span>{user.name}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</ul>\r\n\t\t)\r\n\t\tconst guestLinks = (\r\n\t\t\t<ul className=\"navbar-nav ml-auto\">\r\n\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/register\">Sign Up</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t<Link className=\"nav-link\" to=\"/login\">Sign In</Link>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t)\r\n\t\treturn(\r\n\t\t\t<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n\t\t\t\t<Link className=\"navbar-brand\" to=\"/\">Redux Node Auth</Link>\r\n\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\t\t\t\t\t{isAuth ? authLinks : guestLinks}\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nNavBar.propTypes = {\r\n\tlogoutUser: PropTypes.func.isRequired,\r\n\tauth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tauth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps, { logoutUser })(withRouter(NavBar))","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { withRouter } from 'react-router-dom'\r\nimport classnames from 'classnames'\r\n\r\nimport { registerUser } from '../store/actions/authentication'\r\n\r\nclass Register extends Component {\r\n\tstate = {\r\n\t\tname: '',\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\tpassword_confirm: '',\r\n\t\terrors: {},\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tif(this.props.auth.isAuth) {\r\n\t\t\tthis.props.history.push('/');\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tif(nextProps.auth.isAuth) {\r\n\t\t\tthis.props.history.push('/')\r\n\t\t}\r\n\t\tif (nextProps.errors) {\r\n\t\t\tthis.setState({\r\n\t\t\t\terrors: nextProps.errors\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\thandleInputChange = e => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t})\r\n\t}\r\n\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault()\r\n\t\tconst { registerUser, history } = this.props\r\n\t\tconst user = {\r\n\t\t\tname: this.state.name,\r\n\t\t\temail: this.state.email,\r\n\t\t\tpassword: this.state.password,\r\n\t\t\tpassword_confirm: this.state.password_confirm,\r\n\t\t}\r\n\t\tregisterUser(user, history)\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { errors } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"container\" style={{ marginTop: '50px', width: '700px' }}>\r\n\t\t\t\t<h2 style={{ marginBottom: '40px' }}>Registration</h2>\r\n\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Name\"\r\n\t\t\t\t\t\t\tclassName={classnames('form-control form-control-lg', {\r\n\t\t\t\t\t\t\t\t'is-invalid': errors.name\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t\t\t\tvalue={this.state.name}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.name && (<div className=\"invalid-feedback\">{errors.name}</div>)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\t\t\t\tclassName={classnames('form-control form-control-lg', {\r\n\t\t\t\t\t\t\t\t'is-invalid': errors.email\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t\t\t\tvalue={this.state.email}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tclassName={classnames('form-control form-control-lg', {\r\n\t\t\t\t\t\t\t\t'is-invalid': errors.password\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t\t\t\tvalue={this.state.password}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\tclassName={classnames('form-control form-control-lg', {\r\n\t\t\t\t\t\t\t\t'is-invalid': errors.password_confirm\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tname=\"password_confirm\"\r\n\t\t\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t\t\t\tvalue={this.state.password_confirm}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.password_confirm && (<div className=\"invalid-feedback\">{errors.password_confirm}</div>)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\r\n\t\t\t\t\t\t\tRegister User\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nRegister.propTypes = {\r\n\tregisterUser: PropTypes.func.isRequired,\r\n\tauth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tauth: state.auth,\r\n\terrors: state.errors,\r\n})\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\t{ registerUser }\r\n)(withRouter(Register))\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { withRouter } from 'react-router-dom'\r\nimport classnames from 'classnames'\r\n\r\nimport { loginUser } from '../store/actions/authentication'\r\n\r\nclass Login extends Component {\r\n\tstate = {\r\n\t\temail: '',\r\n\t\tpassword: '',\r\n\t\terrors: {},\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tif(this.props.auth.isAuth) {\r\n\t\t\tthis.props.history.push('/');\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tif(nextProps.auth.isAuth) {\r\n\t\t\tthis.props.history.push('/')\r\n\t\t}\r\n\t\tif (nextProps.errors) {\r\n\t\t\tthis.setState({\r\n\t\t\t\terrors: nextProps.errors\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\thandleInputChange = e => {\r\n\t\tthis.setState({\r\n\t\t\t[e.target.name]: e.target.value,\r\n\t\t})\r\n\t}\r\n\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault()\r\n\t\tconst { loginUser } = this.props\r\n\t\tconst user = {\r\n\t\t\temail: this.state.email,\r\n\t\t\tpassword: this.state.password,\r\n\t\t}\r\n\t\tloginUser(user)\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { errors } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"container\" style={{ marginTop: '50px', width: '700px' }}>\r\n\t\t\t\t<h2 style={{ marginBottom: '40px' }}>Login</h2>\r\n\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\tplaceholder=\"Email\"\r\n\t\t\t\t\t\t\tclassName={classnames('form-control form-control-lg', {\r\n\t\t\t\t\t\t\t\t'is-invalid': errors.email\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t\t\t\tvalue={this.state.email}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\tclassName={classnames('form-control form-control-lg', {\r\n\t\t\t\t\t\t\t\t'is-invalid': errors.password\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t\t\t\tvalue={this.state.password}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\r\n\t\t\t\t\t\t\tLogin User\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nLogin.propTypes = {\r\n\tloginUser: PropTypes.func.isRequired,\r\n\tauth: PropTypes.object.isRequired,\r\n\terrors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tauth: state.auth,\r\n\terrors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, { loginUser })(withRouter(Login))\r\n","import React, { PureComponent } from 'react'\r\nimport classNames from 'classnames'\r\n\r\nclass Card extends PureComponent {\r\n\tstate = {\r\n\t\ttitle: '',\r\n\t\tdescription: '',\r\n\t\tdone: false,\r\n\t\tediting: false\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.setState({\r\n\t\t\ttitle: this.props.title,\r\n\t\t\tdescription: this.props.description,\r\n\t\t\tdone: this.props.done,\r\n\t\t})\r\n\t}\r\n\r\n\thandleInputChange = e => {\r\n\t\tconst target = e.target\r\n\t\tthis.setState({\r\n\t\t\t[target.name]: target.type === 'checkbox' ? target.checked : target.value,\r\n\t\t})\r\n\t}\r\n\r\n\tsaveTodo = () => {\r\n\t\tconst { title, description, done } = this.state\r\n\t\tconst { id, editTodo } = this.props\r\n\t\tconst todo = {\r\n\t\t\tid,\r\n\t\t\ttitle,\r\n\t\t\tdescription,\r\n\t\t\tdone\r\n\t\t}\r\n\t\t\r\n\t\teditTodo(todo)\r\n\t\tthis.setState({\r\n\t\t\tediting: false\r\n\t\t})\r\n\t}\r\n\r\n\teditMode = () => {\r\n\t\tconst { title, description, done } = this.state\r\n\t\treturn (\r\n\t\t\t<div className={classNames({\r\n\t\t\t\t\"bg-dark\": !done,\r\n\t\t\t\t\"bg-success\": done\r\n\t\t\t}, \"card\", \"mb-3\", \"text-white\")}>\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<input type=\"text\" name=\"title\" className=\"card-title form-control\" value={title} onChange={this.handleInputChange}/>\r\n\t\t\t\t\t<textarea name=\"description\" className=\"card-text form-control mb-3\" rows=\"4\" value={description} onChange={this.handleInputChange}/>\r\n\t\t\t\t\t<div className=\"form-group form-check\">\r\n\t\t\t\t\t\t<input type=\"checkbox\" className=\"form-check-input\" id=\"todoDone\" name=\"done\" onChange={this.handleInputChange} checked={done}/>\r\n\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor=\"todoDone\">Done</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button className=\"btn btn-success mr-3\" onClick={this.saveTodo}>Save</button>\r\n\t\t\t\t\t<button className=\"btn btn-danger\" onClick={() => this.setState({editing: false})}>Сancel</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\treadMode = () => {\r\n\t\tconst { id, title, description, done, removeTodo } = this.props\r\n\t\treturn (\r\n\t\t\t<div className={classNames({\r\n\t\t\t\t\"bg-dark\": !done,\r\n\t\t\t\t\"bg-success\": done\r\n\t\t\t}, \"card\", \"mb-3\", \"text-white\")}>\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<h5 className=\"card-title\">{title}</h5>\r\n\t\t\t\t\t<p className=\"card-text\">{description}</p>\r\n\t\t\t\t\t<button className=\"btn btn-danger mr-3\" onClick={() => removeTodo(id)}>Delete</button>\r\n\t\t\t\t\t<button className=\"btn btn-success\" onClick={() => this.setState({editing: true})}>Edit</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\tthis.state.editing ? this.editMode() : this.readMode()\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Card","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect, withRouter } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { getTodos, postRequest } from '../store/actions/todos'\r\nimport Card from './Card';\r\n\r\n\r\nclass Home extends Component {\r\n\tstate = {\r\n\t\ttitle: '',\r\n\t\tdescription: '',\r\n\t\tdone: false\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.props.getTodos()\r\n\t}\r\n\r\n\thandleInputChange = e => {\r\n\t\tconst target = e.target\r\n\t\tthis.setState({\r\n\t\t\t[target.name]: target.type === 'checkbox' ? target.checked : target.value,\r\n\t\t})\r\n\t}\r\n\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault()\r\n\t\tconst { postRequest, auth } = this.props\r\n\t\tconst { title, description, done } = this.state\r\n\t\tconst userID = auth.user.id\r\n\t\tconst todo = { title, description, done }\r\n\t\tpostRequest('create', { userID, todo })\r\n\t\tthis.setState({\r\n\t\t\ttitle: '',\r\n\t\t\tdescription: '',\r\n\t\t\tdone: false,\r\n\t\t})\r\n\t}\r\n\r\n\tonRemoveTodo = todoID => {\r\n\t\tconst { postRequest, auth } = this.props\r\n\t\tconst userID = auth.user.id\r\n\t\tpostRequest('remove', { userID, todoID })\r\n\t}\r\n\r\n\tonRemoveAllTodo = () => {\r\n\t\tconst { postRequest, auth } = this.props\r\n\t\tconst userID = auth.user.id\r\n\t\tpostRequest('removeAll', userID)\r\n\t}\r\n\r\n\tonEditTodo = todo => {\r\n\t\tconst { postRequest, auth } = this.props\r\n\t\tconst userID = auth.user.id\r\n\t\tpostRequest('edit', { userID, todo })\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { auth, todos } = this.props\r\n\r\n\t\tif (!auth.isAuth) return <Redirect to='/login' />\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<h1>Todos</h1>\r\n\r\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"mb-3\">\r\n\t\t\t\t\t<h2>Create todo</h2>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label htmlFor=\"todoTitle\">Todo title</label>\r\n\t\t\t\t\t\t<input type=\"text\" className=\"form-control\" id=\"todoTitle\" placeholder=\"Title...\" name=\"title\" value={this.state.title} onChange={this.handleInputChange}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t<label htmlFor=\"todoDescription\">Example textarea</label>\r\n\t\t\t\t\t\t<textarea className=\"form-control\" id=\"todoDescription\" rows=\"4\" name=\"description\" value={this.state.description} onChange={this.handleInputChange}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-group form-check\">\r\n\t\t\t\t\t\t<input type=\"checkbox\" className=\"form-check-input\" id=\"todoDone\" name=\"done\" onChange={this.handleInputChange} checked={this.state.done}/>\r\n\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor=\"todoDone\">Done</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">\r\n\t\t\t\t\t\tCreate\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t\t<div className=\"row mb-3\">\r\n\t\t\t\t\t<h2 className=\"col-auto mr-auto\">Todo list</h2>\r\n\t\t\t\t\t<button className=\"btn btn-danger coll-auto\" onClick={this.onRemoveAllTodo}>Delete All</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card-columns\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t// ToDo\r\n\t\t\t\t\t\ttodos.todos.map(todo => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Card {...todo} removeTodo={this.onRemoveTodo} editTodo={this.onEditTodo} key={todo.id}/>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nHome.propTypes = {\r\n\tgetTodos: PropTypes.func.isRequired,\r\n\tpostRequest: PropTypes.func.isRequired,\r\n\tauth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tauth: state.auth,\r\n\ttodos: state.todos\r\n})\r\n\r\nexport default connect(mapStateToProps, { getTodos, postRequest })(withRouter(Home))","import React, { Component } from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport jwtDecode from 'jwt-decode'\r\n\r\nimport { setCurrentUser, logoutUser } from './store/actions/authentication'\r\n\r\nimport store from './store/index'\r\n\r\nimport setAuthToken from './setAuthToken'\r\n\r\nimport NavBar from './components/NavBar'\r\nimport Register from './components/Register'\r\nimport Login from './components/Login'\r\nimport Home from './components/Home'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nif (localStorage.jwtToken) {\r\n\tsetAuthToken(localStorage.jwtToken)\r\n\tconst decoded = jwtDecode(localStorage.jwtToken)\r\n\tstore.dispatch(setCurrentUser(decoded))\r\n\r\n\tconst currentTime = new Date() / 1000\r\n\tif (decoded.exp < currentTime) {\r\n\t\tstore.dispatch(logoutUser())\r\n\t\twindow.location.href = '/login'\r\n\t}\r\n}\r\n\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<NavBar />\r\n\t\t\t\t\t\t<Route exact path=\"/\" component={Home} />\r\n\t\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t\t<Route exact path=\"/register\" component={Register}/>\r\n\t\t\t\t\t\t\t<Route exact path=\"/login\" component={Login} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Router>\r\n\t\t\t</Provider>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}